#!/usr/bin/env perl

use FindBin;
BEGIN { unshift @INC, "$FindBin::Bin/../lib" }

use Rplus::Modern;

use Rplus::Model::Account;
use Rplus::Model::Account::Manager;
use Rplus::Model::Event;
use Rplus::Model::Event::Manager;

use Rplus::Util::Config;

use MIME::Lite;
use IPC::Open2;
use DateTime;
use Data::Dumper;

use JSON;

my $DEBUG = 0;
my $config = Rplus::Util::Config::get_config();

my $mail_message = <<'END_MESSAGE';

<html lang="ru">
<!-- BEGIN HEAD -->
<head>
  <meta charset="utf-8" />
  <style tyle="text/css">
  </style>
</head>
<body>
  <p>
    Уважаемый пользователь, на вашем счету заканчиваются средства.
  </p>
  <p>
    Не забудьте пополнить счет в личном <a href="http://rplusmgmt.com/cabinet">кабинете</a>.
  </p>
</body>
</html>

END_MESSAGE


log_event("write_off start", 'system');

my $account_iter = Rplus::Model::Account::Manager->get_objects_iterator(query => [del_date => undef], with_objects => ['location']);
while (my $account = $account_iter->next) {

    eval {

        my $balance = $account->balance;
        my $user_count = $account->user_count;
        my $mode = $account->mode;
        my $location = $account->location;
        my $price = from_json($location->price);

        my $write_off = 0;
        if ($balance >= 0) {
            if ($mode eq 'sale') {
                $write_off = $price->{sale} + $price->{user} * ($user_count - 1);
            } elsif ($mode eq 'rent') {
                $write_off = $price->{rent} + $price->{user} * ($user_count - 1);
            } else {
                $write_off = $price->{sale} + $price->{rent} + $price->{user} * ($user_count - 1);
            }

            if ($account->discount && $account->discount > 0) {

                my $now = DateTime->now();
                if (!$account->discount_end_date || $account->discount_end_date > $now) {
                    say 'discount!';
                    $write_off *= (100 - $account->discount) / 100;
                }
            }

            $account->balance($balance - $write_off);

            if(2 * $write_off > $balance) {
                eval {
                    if ($DEBUG == 0) {
                      send_email($account->email, 'RplusMgmt', $mail_message);
                    } else {
                      # здесь могла быть ваша реклама
                    }
                } or do {
                    log_event('error: ' . $@, $account->id . '');
                }
            }
        } else {

        }

        log_event('balance: ' . $account->balance . '; write_off: ' . $write_off, $account->id . '');
        if ($DEBUG == 0) {
          $account->save(changes_only => 1);
        }
    } or do {
      log_event('error: ' . $@, $account->id . '');
    }
}

log_event("write_off done", 'system');


sub send_email {

    my $to = shift;
    my $subject = shift;
    my $message = shift;

    my $from = 'info@rplusmgmt.com';

    my $msg = MIME::Lite->new(
                   From     => $from,
                   To       => $to,
                   Subject  => $subject,
                   Data     => $message
                   );

    $msg->attr("content-type" => "text/html; charset=UTF-8");
    $msg->send('smtp', 'smtp.yandex.ru', AuthUser=>'info@rplusmgmt.com', AuthPass=>'ckj;ysqgfhjkm', Port => 587);
}

sub log_event {
    my $text = shift;
    my $account = shift;
    my $event = Rplus::Model::Event->new;
    $event->text($text);
    $event->account($account);
    $event->save(insert => 1);
}
